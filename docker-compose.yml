version: '3'

services:
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    command: ./wait-for-it.sh frontend:8080 -- ./docker-entrypoint.sh
    restart: always
    ports:
        - "80:80"
    volumes:
        - ./web/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - frontend
    networks:
      - app-tier
    links:
      - api
      - frontend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: ./wait-for-it.sh api:3000 -- ./docker-entrypoint.sh
    user: node
    working_dir: /home/node/app
    volumes:
      - ./frontend:/home/node/app
    ports:
      - 8080:8080
    environment:
      HOST: '0.0.0.0'
    depends_on:
      - api
    networks:
      - app-tier

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    command: ./wait-for-it.sh db:5432 -- ./docker-entrypoint.sh
    volumes:
      - ./api:/usr/src/app
    ports:
      - 3000:3000
    environment:
      RACK_ENV: development
      RAILS_ENV: development
      APP_DATABASE_HOST: db
      APP_DATABASE_USER: app
      APP_DATABASE_PASSWORD: 3x4mpl3p4S5w3Rd
    depends_on:
      - db
    networks:
      - app-tier
      - db-tier
    links:
      - db:db


  db:
    build:
      context: ./db
      dockerfile: Dockerfile.dev
    volumes:
      - ./db/data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: app_development
      POSTGRES_USER: app
      POSTGRES_PASSWORD: 3x4mpl3p4S5w3Rd
    networks:
      - db-tier


networks:
  app-tier:
    driver: bridge
  db-tier:
    driver: bridge
